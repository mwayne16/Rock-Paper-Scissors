{"version":3,"sources":["assets/images/icon-rock.svg","assets/images/icon-paper.svg","assets/images/icon-scissors.svg","assets/images/icon-close.svg","assets/images/image-rules.svg","assets/images/logo.svg","assets/images/bg-triangle.svg","components/Rules.js","components/Results.js","components/Selections.js","components/Header.js","components/Gameboard.js","App.js","index.js"],"names":["module","exports","modal","document","querySelector","Modal","props","ReactDOM","createPortal","className","id","onClick","close","src","alt","rules","Rules","useState","toggled","changeToggled","useEffect","style","backgroundColor","zIndex","background","type","Results","result","restart","Selections","padding","justifyContent","alignSelf","transform","userSelection","userIcon","CSSTransition","in","undefined","timeout","classNames","unmountOnExit","houseSelection","boxShadow","houseIcon","Score","score","React","memo","logo","gameKey","rock","scissors","paper","Gameboard","updateUserSelection","updateUserIcon","updateHouseSelection","updateHouseIcon","userDidSelect","updateSelectStatus","results","updateResults","updateScore","iconAttatch","icon","rockBTN","paperBTN","scissorsBTN","storeUserSelection","pick","Object","keys","key","storeHouseSelection","min","max","generateHousePick","Math","floor","random","entries","value","determineWinner","beatBy","revealHouse","setTimeout","clearInterval","Fragment","onExit","triangle","bind","this","App","rel","href","target","render","getElementById"],"mappings":"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","file":"static/js/main.603e1436.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-rock.8ce1e109.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-paper.69a8c2e9.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-scissors.bec2f9b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.919ab92a.svg\";","module.exports = __webpack_public_path__ + \"static/media/image-rules.5d74d25d.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.759a2075.svg\";","module.exports = __webpack_public_path__ + \"static/media/bg-triangle.1fd44bdf.svg\";","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport close from '../assets/images/icon-close.svg';\r\nimport rules from '../assets/images/image-rules.svg';\r\nimport './Rules.css';\r\nconst modal = document.querySelector('#modal-portal');\r\n\r\nfunction Modal(props) {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"rulesModal\">\r\n      <h2>Rules</h2>\r\n      <span id=\"modal-close\" onClick={props.close}>\r\n        <img src={close} alt=\"Close Modal Button\"></img>\r\n      </span>\r\n      <img src={rules} alt=\"Rock, Paper, Scissors Rules\"></img>\r\n    </div>,\r\n    modal\r\n  );\r\n}\r\n\r\nfunction Rules() {\r\n  const [toggled, changeToggled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (toggled) {\r\n      modal.style.backgroundColor = 'rgba(0,0,0,0.7)';\r\n      modal.style.zIndex = 2;\r\n    }\r\n    return () => {\r\n      modal.style.background = 'none';\r\n      modal.style.zIndex = 0;\r\n    };\r\n  }, [toggled]);\r\n  return (\r\n    <div className=\"rules\">\r\n      {toggled && <Modal close={() => changeToggled(!toggled)} />}\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => changeToggled(!toggled)}\r\n        className=\"rulesButton\"\r\n      >\r\n        Rules\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\nexport default Rules;\r\n","import React from 'react';\r\nimport './Results.css';\r\nexport default function Results(props) {\r\n  return (\r\n    <div className=\"results\">\r\n      <h1>You {props.result} </h1>\r\n      <button id=\"playAgain\" onClick={props.restart}>\r\n        play again\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Results from './Results';\r\nimport './Selections.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nfunction Selections(props) {\r\n  let houseButtonStyle = {\r\n    background: '#1f1d1d',\r\n    boxShadow: '0px 0px 0px 10px rgba(0,0,0,0.5) inset'\r\n  };\r\n  return (\r\n    <section style={{ padding: '2rem 0' }} className=\"GameBoardResult\">\r\n      <div\r\n        style={{ justifyContent: 'space-around' }}\r\n        className=\"selectionButtons comparedButtons\"\r\n      >\r\n        <div className=\"revealSelectionWrapper\">\r\n          <h3>You Picked</h3>\r\n          <button\r\n            className=\"optionButtons\"\r\n            style={{\r\n              alignSelf: 'center',\r\n              transform: 'scale(1.7)'\r\n            }}\r\n            id={props.userSelection + 'BTN'}\r\n          >\r\n            <img src={props.userIcon} alt=\"User Selection\" />\r\n          </button>\r\n        </div>\r\n        <CSSTransition\r\n          in={props.result !== undefined}\r\n          timeout={500}\r\n          classNames=\"selectionsAnimation\"\r\n          unmountOnExit\r\n        >\r\n          <Results restart={props.restart} result={props.result} />\r\n        </CSSTransition>\r\n        <div className=\"revealSelectionWrapper\">\r\n          {props.houseSelection === 'undefined' && (\r\n            <span className=\"queueHouse\" style={houseButtonStyle}>\r\n              {' '}\r\n            </span>\r\n          )}\r\n\r\n          <h3>The House Picked</h3>\r\n          <button\r\n            className=\"optionButtons\"\r\n            style={{\r\n              alignSelf: 'center',\r\n              transform: 'scale(1.7)'\r\n            }}\r\n            id={props.houseSelection + 'BTN'}\r\n          >\r\n            <img src={props.houseIcon} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\nexport default Selections;\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport logo from '../assets/images/logo.svg';\r\n\r\nfunction Score(props) {\r\n  return (\r\n    <div className=\"scoreBox\">\r\n      <h4>Score</h4>\r\n      <h2>{props.score}</h2>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header>\r\n      <div className=\"logo\">\r\n        <img src={logo} alt=\"Logo\" />\r\n      </div>\r\n      <Score score={props.score} />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default React.memo(Header);\r\n","import React, { useState, useEffect } from 'react';\r\nimport Selections from './Selections';\r\nimport './Gameboard.css';\r\nimport Header from './Header';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport rockBTN from '../assets/images/icon-rock.svg';\r\nimport paperBTN from '../assets/images/icon-paper.svg';\r\nimport scissorsBTN from '../assets/images/icon-scissors.svg';\r\nimport triangle from '../assets/images/bg-triangle.svg';\r\n\r\nconst gameKey = [\r\n  { rock: 'paper' },\r\n  { scissors: 'rock' },\r\n  { paper: 'scissors' }\r\n];\r\nconst generateValue = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\nfunction Gameboard() {\r\n  const [rock, scissors, paper] = gameKey;\r\n  const [userSelection, updateUserSelection] = useState({});\r\n  const [userIcon, updateUserIcon] = useState();\r\n  const [houseSelection, updateHouseSelection] = useState('undefined');\r\n  const [houseIcon, updateHouseIcon] = useState();\r\n  const [userDidSelect, updateSelectStatus] = useState(false);\r\n  const [results, updateResults] = useState(undefined);\r\n  const [score, updateScore] = useState(0);\r\n\r\n  let iconAttatch = icon => {\r\n    switch (icon) {\r\n      case rock:\r\n      case 'rock':\r\n        icon = rockBTN;\r\n        break;\r\n      case paper:\r\n      case 'paper':\r\n        icon = paperBTN;\r\n        break;\r\n      case scissors:\r\n      case 'scissors':\r\n        icon = scissorsBTN;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return icon;\r\n  };\r\n\r\n  const storeUserSelection = pick => {\r\n    updateUserIcon(iconAttatch(pick));\r\n    for (let key of Object.keys(pick)) {\r\n      updateUserSelection(`${key}`);\r\n    }\r\n    updateSelectStatus(true);\r\n  };\r\n\r\n  const storeHouseSelection = () => {\r\n    let generateHousePick = gameKey[generateValue(0, 2)];\r\n    for (let [key, value] of Object.entries(generateHousePick)) {\r\n      determineWinner(value, key);\r\n      updateHouseSelection(`${value}`);\r\n      updateHouseIcon(iconAttatch(`${key}`));\r\n    }\r\n  };\r\n\r\n  const determineWinner = (beatBy, icon) => {\r\n    if (userSelection === beatBy && userSelection !== icon) {\r\n      updateResults('Won');\r\n      updateScore(score + 1);\r\n    } else if (userSelection === icon) {\r\n      updateResults('Tied');\r\n    } else {\r\n      updateScore(0);\r\n      updateResults('Lose');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let revealHouse;\r\n    if (userDidSelect) {\r\n      revealHouse = setTimeout(() => {\r\n        storeHouseSelection();\r\n      }, 2500);\r\n    }\r\n\r\n    return () => {\r\n      updateResults(undefined);\r\n      clearInterval(revealHouse);\r\n    };\r\n    // eslint-disable-next-line\r\n  }, [userDidSelect]);\r\n\r\n  let content = (\r\n    <React.Fragment>\r\n      <Header score={score} />\r\n      <section className=\"GameBoard\">\r\n        <CSSTransition\r\n          timeout={500}\r\n          in={userDidSelect}\r\n          classNames=\"selectionsAnimation\"\r\n          unmountOnExit\r\n          onExit={() => updateHouseSelection('undefined')}\r\n        >\r\n          <Selections\r\n            userIcon={userIcon}\r\n            houseIcon={houseIcon}\r\n            userSelection={userSelection}\r\n            houseSelection={houseSelection}\r\n            result={results}\r\n            restart={() => updateSelectStatus(false)}\r\n          />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={!userDidSelect}\r\n          timeout={500}\r\n          classNames=\"selectionsAnimation\"\r\n          unmountOnExit\r\n        >\r\n          <div className=\"selectionButtons\">\r\n            <span className=\"selectionBase\">\r\n              <img src={triangle} alt=\"Selection Triangle Connector\" />\r\n            </span>\r\n            <button\r\n              className=\"optionButtons\"\r\n              id=\"paperBTN\"\r\n              type=\"button\"\r\n              value={paperBTN}\r\n              onClick={storeUserSelection.bind(this, paper)}\r\n            >\r\n              <img src={paperBTN} alt=\"Paper Selection\" />\r\n            </button>\r\n\r\n            <button\r\n              className=\"optionButtons\"\r\n              id=\"rockBTN\"\r\n              type=\"button\"\r\n              value={rockBTN}\r\n              onClick={storeUserSelection.bind(this, rock)}\r\n            >\r\n              <img src={rockBTN} alt=\"Rock Selection\" />\r\n            </button>\r\n            <button\r\n              className=\"optionButtons\"\r\n              id=\"scissorsBTN\"\r\n              type=\"button\"\r\n              value={scissorsBTN}\r\n              onClick={storeUserSelection.bind(this, scissors)}\r\n            >\r\n              <img src={scissorsBTN} alt=\"Scissors selection\" />\r\n            </button>\r\n          </div>\r\n        </CSSTransition>\r\n      </section>\r\n    </React.Fragment>\r\n  );\r\n\r\n  return content;\r\n}\r\n\r\nexport default Gameboard;\r\n","import React from 'react';\nimport Rules from './components/Rules';\nimport Gameboard from './components/Gameboard';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <React.Fragment>\n        <Gameboard />\n        <Rules />\n      </React.Fragment>\n      <footer>\n        Challenge by{' '}\n        <a\n          rel=\"noopener noreferrer\"\n          href=\"https://www.frontendmentor.io?ref=challenge\"\n          target=\"_blank\"\n        >\n          Frontend Mentor\n        </a>\n        . Coded by <span>Marcus Davis </span>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}